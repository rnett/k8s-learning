apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db-ss
  namespace: k8s-learning
  labels:
    app: k8s-learning
    teir: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-learning
      teir: database
  serviceName: database-service
  template:
    metadata:
      namespace: k8s-learning
      labels:
        app: k8s-learning
        teir: database
    spec:
      containers:
        - name: backend
          image: postgres:14.0-alpine
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              value: testpassword
            - name: PGDATA
              value: /data/pgdata
          volumeMounts:
            - name: db
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        namespace: k8s-learning
        name: db
      spec:
        accessModes: [ "ReadWriteOnce" ]
        #        storageClassName: "database"
        resources:
          requests:
            storage: 500Mi
---
apiVersion: v1
kind: Service
metadata:
  namespace: k8s-learning
  name: database-service
spec:
  selector:
    app: k8s-learning
    teir: database
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-rs
  namespace: k8s-learning
  labels:
    app: k8s-learning
    teir: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: k8s-learning
      teir: backend
  template:
    metadata:
      namespace: k8s-learning
      labels:
        app: k8s-learning
        teir: backend
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: backend
          image: k8s-learning/backend
          imagePullPolicy: Never
          env:
            - name: KLB_POSTGRES_URL
              value: database-service:5432/
            - name: KLB_POSTGRES_USER
              value: postgres
            - name: KLB_POSTGRES_PASSWORD
              value: testpassword
          ports:
            - containerPort: 8080
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: k8s-learning
spec:
  selector:
    app: k8s-learning
    teir: backend
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-rs
  namespace: k8s-learning
  labels:
    app: k8s-learning
    teir: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: k8s-learning
      teir: frontend
  template:
    metadata:
      namespace: k8s-learning
      labels:
        app: k8s-learning
        teir: frontend
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: frontend
          image: k8s-learning/frontend
          imagePullPolicy: Never
          env:
            - name: KLF_SERVER_URL
              value: http://backend-service:8080
          ports:
            - containerPort: 8081
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: k8s-learning
spec:
  type: LoadBalancer
  selector:
    app: k8s-learning
    teir: frontend
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8081